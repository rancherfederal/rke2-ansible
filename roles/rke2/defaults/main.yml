---

# Variables shown below include their default values. Please override via groupvars as necessary.

# Installation:

## Specific version of RKE2 you wish to install. Blank defaults to latest and requires an Internet connection.
rke2_install_version: ""

## When using Internet to install RKE2, which repositories should be searched (stable or latest)
rke2_channel: "stable"

## RPM Install Specific Variables

### These two repos can point to the same 'baseurl' all of the RPMs are in the same repo.
### Common YUM repo that contains RKE2 SELinux.
rke2_common_yum_repo:
  name: rancher-rke2-common
  description: "Rancher RKE2 Common Latest"
  baseurl: "https://rpm.rancher.io/rke2/{{ rke2_channel }}/common/centos/$releasever/noarch"
  gpgcheck: true
  gpgkey: "https://rpm.rancher.io/public.key"
  enabled: true

### Versioned YUM repo that contains RKE2 Server, Agent, and Common RPMs.
rke2_versioned_yum_repo:
  name: "rancher-rke2-v{{ rke2_version_majmin }}"  # noqa jinja[spacing]
  description: "Rancher RKE2 Version"
  baseurl: "https://rpm.rancher.io/rke2/{{ rke2_channel }}/{{ rke2_version_majmin }}/centos/$releasever/$basearch"
  gpgcheck: true
  gpgkey: "https://rpm.rancher.io/public.key"
  enabled: true

## Tarball Install Specific Variables:

### If installing via Tarball, the location to extract the contents.
rke2_tarball_install_dir: "/usr/local"

### Path, local to Ansible control host, where the install Tarball can be found. If installing on a RPM-based OS, this will override the RPM install and force a Tarball install.
rke2_install_local_tarball_path: ""

### #URL where the install Tarball can be found. If installing on a RPM-based OS, this will override the RPM install and force a Tarball install.
rke2_install_tarball_url: ""

### RHEL-based OS's default to RPMs for installation, set to 'true' to force ansible to use a tarball. Designed for use on an Internet connected system where you want to use the Tarball available from the GitHub.
rke2_force_tarball_install: false

## Images to load directly into RKE2 via agent/images directory:

### URL of image tarball.
rke2_images_urls: []

### Path, local to Ansible control host, where an image Tarball can be found.
rke2_images_local_tarball_path: []

# Configuration:

## Defines common RKE2 config options for the whole cluster.
cluster_rke2_config: {}

## Defines common RKE2 config options for the server or agent group.
group_rke2_config: {}

## Defines RKE2 config options for a specific server or agent node
host_rke2_config: {}

## API Address for Cluster if behind Loadbalancer or Virtual IP.
rke2_kubernetes_api_server_host: ""

## Path, local to Ansible control host, where audit policy can be found.
rke2_audit_policy_config_file_path: ""

## Path, local to Ansible control host, where registries config can be found.
rke2_registry_config_file_path: ""

## Path, local to Ansible control host, where PSA policy can be found.
rke2_pod_security_admission_config_file_path: ""

## Set 'true' if Ansible should automatically add IPTABLES rules to allow for Kubernetes traffic.
rke2_add_iptables_rules: false

## Path, local to Ansible control host, where manifests can be found that will be added (to server/manifests directory) and automatically applied after first server is up.
rke2_manifest_config_directory: ""

## Path, local to Ansible control host, where manifests can be found that will be added (to server/manifests directory) and automatically applied after last server is up.
rke2_manifest_config_post_run_directory: ""

## Path, local to Ansible control host, where systemd environment file config can be found (Proxy Config).
rke2_systemd_env_config_file_path: ""

# Should not be changed:
rke2_metrics_running: false
rke2_node_ready: "false"
rke2_api_server_running: false
rke2_installed: false
rke2_version_changed: false
rke2_reboot: false
rke2_version_majmin: ""
rke2_version_rpm: ""
rke2_package_state: "installed"
