---
- name: TARBALL | Make temp dir
  ansible.builtin.tempfile:
    state: directory
    suffix: .rke2-install.XXXXXXXXXX
    path: "{{ tarball_tmp_dir | default(omit) }}"
  register: temp_dir

- name: Set architecture specific variables
  ansible.builtin.set_fact:
    arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Determine if current version differs from what is being installed
  ansible.builtin.set_fact:
    rke2_version_changed: true
  when:
    - rke2_install_local_tarball_path == ""
    - rke2_install_tarball_url == ""
    - not rke2_installed or rke2_installed_version | default("") != rke2_full_version

- name: Send provided tarball from local control machine if available
  ansible.builtin.copy:
    src: "{{ rke2_install_local_tarball_path }}"
    dest: "{{ temp_dir.path }}/rke2.linux-{{ arch }}.tar.gz"
    mode: '0644'
  when:
    - rke2_install_local_tarball_path != ""

- name: Download Tar from provided URL
  ansible.builtin.get_url:
    url: "{{ rke2_install_tarball_url }}"
    dest: "{{ temp_dir.path }}/rke2.linux-{{ arch }}.tar.gz"
    mode: "0644"
  when:
    - rke2_install_tarball_url != ""

- name: Download the tar from github releases
  ansible.builtin.get_url:
    url: "https://github.com/rancher/rke2/releases/download/{{ rke2_full_version }}/rke2.linux-{{ arch }}.tar.gz"
    dest: "{{ temp_dir.path }}/rke2.linux-{{ arch }}.tar.gz"
    mode: "0644"
  when:
    - rke2_install_local_tarball_path == ""
    - rke2_install_tarball_url == ""
    - rke2_version_changed

- name: Ensure Tar utility installed on system
  ansible.builtin.package:
    name: tar
    state: present
  ignore_errors: true  # noqa ignore-errors

- name: Get version of provided tarball
  when:
    - (rke2_install_local_tarball_path != "" or rke2_install_tarball_url != "")
  block:
    - name: Unarchive tarball into temp location
      ansible.builtin.unarchive:
        src: "{{ temp_dir.path }}/rke2.linux-{{ arch }}.tar.gz"
        dest: "{{ temp_dir.path }}"
        remote_src: true
      changed_when: false

    - name: Get tarball RKE2 version from temp location
      ansible.builtin.shell: set -o pipefail && {{ temp_dir.path }}/bin/rke2 -v | awk '$1 ~ /rke2/ { print $3 }'
      register: rke2_tarball_version_tmp
      changed_when: false
      args:
        executable: /usr/bin/bash

    - name: Set tarball RKE2 version var
      ansible.builtin.set_fact:
        rke2_tarball_version: "{{ rke2_tarball_version_tmp.stdout }}"

    - name: Determine if current version differs from what is being installed
      ansible.builtin.set_fact:
        rke2_version_changed: true
      when:
        - not rke2_installed or rke2_installed_version != rke2_tarball_version

- name: TARBALL | Check Target Mountpoint
  ansible.builtin.command: mountpoint -q {{ rke2_tarball_install_dir }}
  register: rke2_tarball_install_dir_stat
  failed_when: false
  changed_when: false

- name: TARBALL | rke2_tarball_install_dir is a mountpoint setting dir to /opt/rke2
  ansible.builtin.set_fact:
    rke2_tarball_install_dir: "/opt/rke2"
  when: rke2_tarball_install_dir_stat.rc == 0

- name: TARBALL | Using /opt/rke2
  ansible.builtin.debug:
    msg: "Using /opt/rke2 for install directory"
  when: rke2_tarball_install_dir_stat.rc == 0

- name: TARBALL | Create {{ rke2_tarball_install_dir }}
  ansible.builtin.file:
    path: "{{ rke2_tarball_install_dir }}"
    state: directory
    recurse: true
  when: rke2_tarball_install_dir is defined

- name: Final extraction/installation of RKE2 Tar
  when:
    - rke2_version_changed
  block:

    - name: Unarchive rke2 tar
      ansible.builtin.unarchive:
        src: "{{ temp_dir.path }}/rke2.linux-{{ arch }}.tar.gz"
        dest: "{{ rke2_tarball_install_dir }}"
        remote_src: true

    - name: TARBALL | Updating rke2-server.service
      ansible.builtin.replace:
        path: "{{ rke2_tarball_install_dir }}/lib/systemd/system/rke2-server.service"
        regexp: '/usr/local'
        replace: '{{ rke2_tarball_install_dir }}'
      notify: Restart rke2-server

    - name: TARBALL | Updating rke2-agent.service
      ansible.builtin.replace:
        path: "{{ rke2_tarball_install_dir }}/lib/systemd/system/rke2-agent.service"
        regexp: '/usr/local'
        replace: '{{ rke2_tarball_install_dir }}'
      notify: Restart rke2-agent

    - name: TARBALL | Updating rke2-uninstall.sh
      ansible.builtin.replace:
        path: "{{ rke2_tarball_install_dir }}/bin/rke2-uninstall.sh"
        regexp: '/usr/local'
        replace: '{{ rke2_tarball_install_dir }}'

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ rke2_tarball_install_dir }}/lib/systemd/system/rke2-server.service"
        dest: /etc/systemd/system/rke2-server.service
        mode: '0644'
        owner: root
        group: root
        remote_src: true
      when:
        - inventory_hostname in groups['rke2_servers']

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ rke2_tarball_install_dir }}/lib/systemd/system/rke2-server.env"
        dest: /etc/systemd/system/rke2-server.env
        mode: '0644'
        owner: root
        group: root
        remote_src: true
      when:
        - inventory_hostname in groups['rke2_servers']

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ rke2_tarball_install_dir }}/lib/systemd/system/rke2-agent.service"
        dest: /etc/systemd/system/rke2-agent.service
        mode: '0644'
        owner: root
        group: root
        remote_src: true
      when:
        - inventory_hostname in groups.get('rke2_agents', [])

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ rke2_tarball_install_dir }}/lib/systemd/system/rke2-agent.env"
        dest: /etc/systemd/system/rke2-agent.env
        mode: '0644'
        owner: root
        group: root
        remote_src: true
      when:
        - inventory_hostname in groups.get('rke2_agents', [])

    - name: TARBALL | Refreshing systemd unit files
      ansible.builtin.systemd:
        daemon-reload: true

- name: Remove the temp_dir
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent
  when: temp_dir.path is defined
